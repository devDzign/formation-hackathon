security:
  encoders:
    App\Entity\User:
      algorithm: auto

  role_hierarchy:
    # Un admin hérite des droits d'auteur et de modérateur
    ROLE_ADMIN:       [ROLE_USER, ROLE_MODERATEUR]
    # On garde ce rôle superadmin, il nous resservira par la suite
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: rio
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true
      guard:
        authenticators:
          - App\Security\LoginFormAuthenticator
          - App\Security\Passage2Authenticator
        entry_point: App\Security\LoginFormAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: '/delete', roles: ROLE_ADMIN }
    - { path: '/edit', roles: ROLE_MODERATEUR }
    - { path: '^/post', roles: ROLE_USER }


